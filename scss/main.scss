//Constants, Put reusable vars in there.
@import "constants";

@import "search";
@import "question";
@import "tags";
@import "banner";
@import "add_response";
@import "util";
@import "user";
@import "sidebar";
@import "nav_bar";
@import "ask";
@import "questionStream";
@import "login";
@import "about";
@import "discover";
//Global things go here

body {
  font-family: helvetica, 'Arvo', sans-serif;
  letter-spacing: .02em;
  margin: 0;
  font-size: 15px;
}
@media(pointer:coarse) {
    body {
      font-size: 4vw!important;
    }
    .content {
      margin-top: 9em!important;
    }
    .sidebar {
      display: none;
    }
}
h4 {
  margin-top: .2em;
  margin-bottom: .2em;
}
p{
  font-size: .8em;
}
input {
  padding-left: .4em;
  font-size: 1em;
  border-radius: $SBR;
  border: .5px solid grey;
  font-family: 'open sans', sans-serif;
}
textarea {
  margin: 20px;
  border-radius: $SBR;
  resize: vertical;
  font-size: 1em;
  border: .5px solid grey;
  font-family: 'open sans', sans-serif;
}
button {
  border: none;
  margin: none;
  font-size: .8em;
  text-decoration: none;
  background-color: rgba(255, 255, 255, 0);
  display: block;
  padding: .6em;
  color: black;
  text-align: center;
  justify-content: center;
  border-radius: $SBR;
}
label {
  // font-size: .8em;
}
button:focus {
  outline: none;
}
button:hover {
  cursor: pointer;
}
a:hover {
  cursor: pointer !important;
}

form {
    border-radius: $SBR;
    width: auto;
    padding: .2rem;
}
.content {
  margin-top: 3.8rem;
  display: flex;
  flex-direction: column;
  transition: margin-top 90ms;
}
.detailText {
  color: grey;
  font-size: 0.8em;
}
.contentBigHead {
  margin-top: 9em !important;
}
.optionsBox {
  padding: .4em;
  a {
    // color: rgba(82, 172, 222, 1);
    margin-left: .5em;
    margin-right: .5em;
    text-decoration: none;
  }
  .divider {
    width: 1px;
    background: grey;
  }
}
.tag{
  // font-family: 'Arvo', sans-serif;
  font-size: .8em;
  cursor: pointer !important;
  border-radius: .8em;
  margin-right: .5em;
  padding: .2em;
  padding-right: 1em;
  padding-left: 1em;
  // background: rgba(43, 182, 233, 0.11);
  align-self: center;
  color: grey;
}
.tag:hover {
  // background: darken(rgba(43, 182, 233, 0.11), 20%);
}

.infoButton {
  text-align: center;
  // color: rgba(54, 187, 51, 1);
  padding: .2em .4em .2em;
}
.doButton {
  text-align: center;
  // background: rgba(82, 172, 222, 1);
  padding: .6em;
  border-radius: .4em;
  text-decoration: none;
  // color: white;
  //box-shadow: 0 0 .2em .2em rgba(167, 165, 165, 0.45);

}
.doButton:hover {
  // color: grey;
  // background: darken(rgba(50, 140, 191, 0.46), 20%);
  transition: 100ms;
}
.lightEmphasisButton {
  border-bottom: .5px solid lightgrey;
}
.plainBoarderedButton {
  border: .5px solid black;
}
.editButton {
  // background: rgba(255, 0, 0, 0.62);
  // border-radius: 1em;
  padding: .2em;
  margin: 0 .5em;
  text-decoration: none;
  // color: black;
}
.editButton {
  @extend .whiteButton;
  display: table;
}

//William: Writing a bunch of parts.

//Main button class
.whiteButton.pressed{
  background-color: darken($BUTTON-COLOR, 20%);
}
.whiteButton{
  color: $BLACK-MED;
  transition: background-color $BUTTON-TIME ease;
  background-color: $BUTTON-COLOR;
  border-radius: 2px;
  border-color: $BUTTON-BORDER-COLOR;
  border-width: $BUTTON-BORDER-SIZE;
  border-style: $BUTTON-BORDER-STYLE;
  text-decoration: none;
  &:hover{
    background-color: darken($BUTTON-COLOR, 10%);
  }
  &:active{
    background-color: darken($BUTTON-COLOR, 20%);
  }
}
//Used to define the border around a lot inputs and buttons.
BUTTON-BORDER{
  border-color: $BUTTON-BORDER-COLOR;
  border-width: $BUTTON-BORDER-SIZE;
  border-style: $BUTTON-BORDER-STYLE;
}
//Round buttons for tag like things.
$SMALL-SIZE: .7rem;
.roundButton{
  $s:$SMALL-SIZE;
  @extend .whiteButton;
  height: $s;
  font-size: $s;
  line-height: $s;
  border-radius: $s;
  vertical-align: middle;
}
//Circular buttons for icons
$MEDIUM-SIZE: 2rem;
.answer {
  transition: width 2s linear 1s;
  .actionButton:hover{
    .description{
      visibility: visible;
      font-size: 1rem;
      opacity: 1;
      margin-right: .6rem;
    }
  }
}
.actionButton{
  $s:$MEDIUM-SIZE;
  @extend .whiteButton;
  min-width:$s;
  min-height:$s;
  border-radius:$s/2 !important;
  font-size:$s/2;
  display: flex;
  transition: all .4s !important;
  color: $BLACK-LOW;
  &:hover{
    .description{
      font-size: 2*$s/5;
      margin: .4rem;
      margin-left: .2rem;
    }
  }
  i{
    width: $s/2;
    height: $s/2;
    margin-top: $s/4;
    margin-left: $s/4;
    text-align: center;
    vertical-align: middle;
  }
  .description{
    transition: all 1s ease;
    text-decoration: none !important;
    font-size: 0;
    justify-content: center;
    align-self: center;
    margin: 0;
  }
}
.circleButton{
  $s:$MEDIUM-SIZE;
  @extend .whiteButton;
  font-size:$s/2;
  height:$s;
  width:$s;
  border-radius:$s/2;
  *{
    opacity: $PRIORITY-MED;
    width: $s/2;
    height: $s/2;
    margin-top: $s/4;
    margin-left: $s/4;
    text-align: center;
    vertical-align: middle;
  }
}
.sideButton{
  text-align: center;
  width: 2rem;
  display: flex;
  flex-direction: column;
  &:hover{
    background-color: $BLACK-LOWEST;
  }
  &>div{
    flex-grow: 1;
  }
  &>i{
    flex-grow: 0;
  }
}
.error{
  border-radius: 5px;
  padding: 10px;
  transition: all 1s ease-in-out;
  background-color: $COLOR-ERROR-BG-AFTER;
  color: $COLOR-ERROR-TEXT-AFTER;
}
.error.ng-hide{
  background-color: $COLOR-ERROR-BG-BEFORE;
  color: $COLOR-ERROR-TEXT-BEFORE;
}
EXPAND{
  width: 100% !important;
}
CONTRACT{
  width: auto !important;
}
